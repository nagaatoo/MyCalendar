/*
 * MyCalendar API
 * API для календаря
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.CalendarShort;

/**
 * Список календарей пользователя
 */
@ApiModel(description = "Список календарей пользователя")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-02T02:34:45.648669+06:00[Asia/Almaty]")
public class CalendarList {
  public static final String SERIALIZED_NAME_PAGE_NO = "pageNo";
  @SerializedName(SERIALIZED_NAME_PAGE_NO)
  private Integer pageNo;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Long size;

  public static final String SERIALIZED_NAME_CALENDARS = "calendars";
  @SerializedName(SERIALIZED_NAME_CALENDARS)
  private CalendarShort calendars;


  public CalendarList pageNo(Integer pageNo) {
    
    this.pageNo = pageNo;
    return this;
  }

   /**
   * Номер страницы
   * @return pageNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Номер страницы")

  public Integer getPageNo() {
    return pageNo;
  }


  public void setPageNo(Integer pageNo) {
    this.pageNo = pageNo;
  }


  public CalendarList pageSize(Integer pageSize) {
    
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Размер страницы
   * @return pageSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Размер страницы")

  public Integer getPageSize() {
    return pageSize;
  }


  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public CalendarList size(Long size) {
    
    this.size = size;
    return this;
  }

   /**
   * Общее количество календарей
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Общее количество календарей")

  public Long getSize() {
    return size;
  }


  public void setSize(Long size) {
    this.size = size;
  }


  public CalendarList calendars(CalendarShort calendars) {
    
    this.calendars = calendars;
    return this;
  }

   /**
   * Get calendars
   * @return calendars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CalendarShort getCalendars() {
    return calendars;
  }


  public void setCalendars(CalendarShort calendars) {
    this.calendars = calendars;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalendarList calendarList = (CalendarList) o;
    return Objects.equals(this.pageNo, calendarList.pageNo) &&
        Objects.equals(this.pageSize, calendarList.pageSize) &&
        Objects.equals(this.size, calendarList.size) &&
        Objects.equals(this.calendars, calendarList.calendars);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageNo, pageSize, size, calendars);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalendarList {\n");
    sb.append("    pageNo: ").append(toIndentedString(pageNo)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    calendars: ").append(toIndentedString(calendars)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

